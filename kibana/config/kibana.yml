---
## Default Kibana configuration from Kibana base image.
## https://github.com/elastic/kibana/blob/main/src/dev/build/tasks/os_packages/docker_generator/templates/kibana_yml.template.ts
#
server.name: kibana
server.host: 0.0.0.0

# Enable HTTPS
server.ssl.enabled: true
server.ssl.certificate: /usr/share/kibana/config/node/instance/instance.crt
server.ssl.key: /usr/share/kibana/config/node/instance/instance.key
server.ssl.keyPassphrase: phuongk16cntt2
server.ssl.certificateAuthorities: [ "/usr/share/kibana/config/ca/ca.crt" ]

# Update Elasticsearch connection to use HTTPS
elasticsearch.hosts: [ "https://elasticsearch:9200" ]
elasticsearch.ssl.certificateAuthorities: [ "/usr/share/kibana/config/ca/ca.crt" ]
elasticsearch.ssl.verificationMode: certificate

monitoring.ui.container.elasticsearch.enabled: true
monitoring.ui.container.logstash.enabled: true

## Security credentials
#
elasticsearch.username: kibana_system
elasticsearch.password: ${KIBANA_SYSTEM_PASSWORD}

## Encryption keys (optional but highly recommended)
##
## Generate with either
##  $ docker container run --rm docker.elastic.co/kibana/kibana:9.0.0 bin/kibana-encryption-keys generate
##  $ openssl rand -hex 32
##
## https://www.elastic.co/docs/deploy-manage/security/self-setup
## https://www.elastic.co/docs/reference/kibana/commands/kibana-encryption-keys
#
#xpack.security.encryptionKey:
#xpack.encryptedSavedObjects.encryptionKey:
#xpack.reporting.encryptionKey:

## Fleet
## https://www.elastic.co/docs/reference/kibana/configuration-reference/fleet-settings
#
xpack.fleet.agents.fleet_server.hosts: [ http://fleet-server:8220 ]
# elasticsearch.username: elastic
# elasticsearch.password: ${ELASTIC_PASSWORD}

xpack.fleet.outputs:
  - id: fleet-default-output
    name: default
    type: elasticsearch
    hosts: [ https://172.17.0.1:9200 ]
    is_default: true
    is_default_monitoring: true
xpack.encryptedSavedObjects.encryptionKey: '8jKnc/+aJwQKsTOTs1SIbktu1u0AcvXNNrPfJ0pdovA='
#xpack.fleet.outputs:
xpack.fleet.packages:
  - name: fleet_server
    version: latest
  - name: system
    version: latest
  - name: elastic_agent
    version: latest
  - name: docker
    version: latest
  - name: apm
    version: latest

xpack.fleet.agentPolicies:
  - name: Fleet Server Policy
    id: fleet-server-policy
    description: Static agent policy for Fleet Server
    monitoring_enabled:
      - logs
      - metrics
    package_policies:
      - name: fleet_server-1
        package:
          name: fleet_server
      - name: system-1
        package:
          name: system
      - name: elastic_agent-1
        package:
          name: elastic_agent
      - name: docker-1
        package:
          name: docker
  - name: Agent Policy APM Server
    id: agent-policy-apm-server
    description: Static agent policy for the APM Server integration
    monitoring_enabled:
      - logs
      - metrics
    package_policies:
      - name: system-1
        package:
          name: system
      - name: elastic_agent-1
        package:
          name: elastic_agent
      - name: apm-1
        package:
          name: apm
        # See the APM package manifest for a list of possible inputs.
        # https://github.com/elastic/integrations/blob/d62b684/packages/apm/manifest.yml#L44-L174
        inputs:
          - type: apm
            vars:
              - name: host
                value: 0.0.0.0:8200
              - name: url
                value: http://apm-server:8200
